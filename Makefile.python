include config/base.config

####   
PYTHONVER		= 3.10.2
PYTHON			= Python-${PYTHONVER}
PYTHON_INST_PATH	= ${NLYTIQ_INST_PATH}


# Python needs freetype include directory
CXXFLAGS	+= $(shell freetype-config --cflags)

### MacOSX specific CFLAGS/LDFLAGS (c.f. https://stackoverflow.com/questions/41489439/pip3-installs-inside-virtual-environment-with-python3-6-failing-due-to-ssl-modul)
ifeq ($(OS),Darwin)
include config/forcepyllvm.config
CFLAGS  += -I$(shell brew --prefix openssl)/include \
	   -I$(shell brew --prefix sqlite3)/include \
	   -I$(shell brew --prefix gdbm)/include \
	   -I$(shell brew --prefix ossp-uuid)/include/ossp/ \
	   -I/opt/X11/include \
	   -I/usr/local/include \
	   -I/usr/local//Cellar/zlib/1.2.11/include 
LDFLAGS += -L$(shell brew --prefix openssl)/lib \
	   -L$(shell brew --prefix sqlite3)/lib \
	   -L$(shell brew --prefix gdbm)/lib \
	   -L$(shell brew --prefix ossp-uuid)/lib/ \
	   -L/opt/X11/lib/ \
	   -L/usr/local/lib \
	   -L/usr/local//Cellar/zlib/1.2.11/lib
endif

# ${_EPF_} contains the front matter for configure after the include below
include config/configure.prefix.flag.config


#--------------------------------------------------------------------------#

all:    	install-python-modules

clean:		clean-python  

configure-python:	
	tar -Jxvf sources/${PYTHON}.tar.xz
ifeq (${OS},Darwin)
	cd ${PYTHON} ; ${_EPF_}  ./configure --prefix=${NLYTIQ_INST_PATH} \
		--disable-optimizations \
		--with-openssl=$(shell brew --prefix openssl) 
		--disable-profiling
else
	cd ${PYTHON} ; ${_EPF_}  ./configure --prefix=${NLYTIQ_INST_PATH} \
		--enable-optimizations --enable-shared
endif
		
	touch configure-python

make-python: configure-python
	cd ${PYTHON} ; make -j${NCPU}
	touch make-python

install-python: make-python
	cd ${PYTHON} ; make install
	touch install-python

install-python-modules: install-python
	# now install jupyter, numpy, scipy and others
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install jupyter
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install numpy
	#${NLYTIQ_INST_PATH}/bin/pip3 install dateutil 
	LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install pyzmq tornado
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install matplotlib
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install pandas
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install sympy
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install fortran-language-server
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install scipy
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install requests
	# note: these are the non-GPU versions of the below
	# To Do: Add in GPU versions
	#${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install tensorflow-gpu
#	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install bokeh
#	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install Keras
#	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install torch	
	${_EPF_} LD_LIBRARY_PATH=${NLYTIQ_INST_PATH}/lib ${NLYTIQ_INST_PATH}/bin/pip3 install xlrd
	touch install-python-modules

clean-python:
	rm -rf ${PYTHON} make-python configure-python install-python install-python-modules python
