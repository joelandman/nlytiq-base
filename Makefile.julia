include base.config
include forcegcc.config
#include forcellvm.config

JULIA_VER = 0.6.2
JULIA_NAME = ${JULIA_VER}-full
JULIA_INST_PATH	= ${NLYTIQ_INST_PATH}
JULIA_DWV = julia-${JULIA_VER}
JULIA_DIR = julia

ifeq ($(CLANG),1)
__ENV__SET = USE_LLVM_SHLIB=1
endif

ifeq ($(GCC),1)
	__ENV__SET = USE_LLVM_SHLIB=0
endif

__ENV__SET += PYTHON=${NLYTIQ_INST_PATH}/bin/python3

# ${_EPF_} contains the front matter for configure after the include below
include configure.prefix.flag.config



all:    	install-julia-modules

clean:		clean-julia

configure-julia:
	tar -zxvf sources/julia-${JULIA_NAME}.tar.gz

	# rename julia directory to exclude version name
	if [ -d ${JULIA_DWV} ]; then 		  \
		mv -vf ${JULIA_DWV} ${JULIA_DIR} ;\
	fi

	rm -f ${JULIA_DIR}/Make.user
	cp -f julia.Make.user ${JULIA_DIR}/Make.user
ifeq (${OS},FreeBSD)
	echo  FC=${FC} >> ${JULIA_DIR}/Make.user
	echo  CC=${CC} >> ${JULIA_DIR}/Make.user
	echo  CXX=${CXX} >> ${JULIA_DIR}/Make.user
	echo  CC_BASE=${CC} >> ${JULIA_DIR}/Make.user
	echo  CXX_BASE=${CXX} >> ${JULIA_DIR}/Make.user
	echo  USEGCC=0 >> ${JULIA_DIR}/Make.user
	echo  USECLANG=1 >> ${JULIA_DIR}/Make.user
	echo  LDFLAGS=${LDFLAGS} >> ${JULIA_DIR}/Make.user
	echo  FFLAGS=${FFLAGS} ${LDFLAGS} >> ${JULIA_DIR}/Make.user
	echo  CFLAGS=${CFLAGS} >> ${JULIA_DIR}/Make.user
	echo  CPPFLAGS=${CXXFLAGS} >> ${JULIA_DIR}/Make.user
	echo  PYTHON=${NLYTIQ_INST_PATH}/bin/python3
	# make sure you have openblas installed
	#echo  USE_SYSTEM_BLAS=1 >> ${JULIA_DIR}/Make.user
	#echo  LIBBLAS=-lopenblas >> ${JULIA_DIR}/Make.user
	#echo  LIBBLASNAME=libopenblas  >> ${JULIA_DIR}/Make.user
	#echo  OPENBLAS_TARGET_ARCH=NEHALEM >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_LAPACK=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_GMP=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_LIBUV=0 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_MBEDTLS=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_LIBSSH2=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_MPFR=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_UTF8PROC=0 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_FFTW=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_LLVM=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_PCRE=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_CURL=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_LIBGIT2=1 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_SUITESPARSE=1  >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_LIBUNWIND=0 >> ${JULIA_DIR}/Make.user
	#echo  USE_SYSTEM_LIBM=0 >> ${JULIA_DIR}/Make.user
	#echo  JULIA_CPU_CORES=1 >> ${JULIA_DIR}/Make.user
	echo  LLVM_CONFIG=${NLYTIQ_INST_PATH}/bin/llvm-config
else
	#echo "USE_SYSTEM_BLAS=1" >> ${JULIA_DIR}/Make.user
	#echo "build_shlibdir=${NLYTIQ_INST_PATH}/lib" >> ${JULIA_DIR}/Make.user
	#echo "LIBBLAS=-L${NLYTIQ_INST_PATH}/lib -lopenblas"  >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_LAPACK=0" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_FFTW=1" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_LIBUV=0" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_OPENLIBM=1" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_GMP=1" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_MPFR=1" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_LIBUNWIND=1" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_LIBGIT2=1" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_PCRE=0" >> ${JULIA_DIR}/Make.user
	##echo "PCRE_CONFIG=${NLYTIQ_INST_PATH}/bin/pcre2-config" >> ${JULIA_DIR}/Make.user
	##echo "LLVM_CONFIG=${NLYTIQ_INST_PATH}/bin/llvm-config" >> ${JULIA_DIR}/Make.user
	##echo "USE_SYSTEM_LLVM=1"  >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_SUITESPARSE=1"  >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_UTF8PROC=0" >> ${JULIA_DIR}/Make.user
	#echo "USE_SYSTEM_MBEDTLS=1" >> ${JULIA_DIR}/Make.user

endif
	#echo "USE_SYSTEM_PCRE=1" > ${JULIA_DIR}/Make.user
	#echo "LLVM_VER = 4.0.0"  >> ${JULIA_DIR}/Make.user
	#echo "MARCH=sandybridge" >> ${JULIA_DIR}/Make.user
	#echo "JULIA_CPU_TARGET=core2"  >> ${JULIA_DIR}/Make.user

	touch configure-julia

make-julia: configure-julia
	cd ${JULIA_DIR} ; \
		 ${__ENV__SET} ;\
		 PATH=${PATH}:${NLYTIQ_INST_PATH}/bin ;\
		 ${MAKECMD}  -j${NCPU} OPENBLAS_TARGET_ARCH=HASWELL
#        cd ${JULIA_DIR} ;\
#                 ${__ENV__SET} ;\
#                 ${_EPF_} ;\
#                 ${MAKECMD}  -j${NCPU}

	touch make-julia

install-julia: make-julia
	cd ${JULIA_DIR} ;  ${__ENV__SET} ${_EPF_} ${MAKECMD} install
	cd ${JULIA_DIR}/usr ; tar -cf - . | (cd ${JULIA_INST_PATH} && tar -xvf - )
	touch install-julia

install-julia-modules: install-julia
	mkdir -p ${JULIA_INST_PATH}/julia
	echo ${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia >> bashrc.julia
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.init()'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.update()'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("PyPlot")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("Gadfly")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("Plots")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("AWSCore")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("AWSS3")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("AWSLambda")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("DifferentialEquations")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("CRC")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("CSV")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("CurveFit")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("CpuId")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("ConfParser")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("ClusterManagers")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("DataFrames")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("Gaston")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("GaussQuadrature")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("JSON")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("IJulia")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("Mux")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("WebSockets")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("HexEdit")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("LSODA")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("LsqFit")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("MXNet")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("NumericIO")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("PlotRecipes")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("FastGaussQuadrature")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("RingBuffers")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("SQLite")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("SIMD")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("Roots")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("Sparklines")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("TensorFlow")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("Sundials")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("TimeSeriesIO")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("UUID")'
	${__ENV__SET} JULIA_PKGDIR=${JULIA_INST_PATH}/julia ${JULIA_INST_PATH}/bin/julia -e 'Pkg.add("YAML")'
	touch install-julia-modules

clean-julia:
	rm -rf install-julia make-julia configure-julia OpenBLAS* ${JULIA_DIR} install-julia install-julia-modules bashrc.julia
