include config/base.config

#### llvm
LLVMVER		= 12.0.0
LLVMSRC		= llvm-project-${LLVMVER}.src
LLVMDIR		= ${LLVMSRC}
LLVMTAR		= ${LLVMDIR}.tar.xz
LLVM_INST_PATH	= ${NLYTIQ_INST_PATH}

ifeq (${OS},Darwin)
CMAKE_BIN	= ${NLYTIQ_INST_PATH}/bin/cmake
else
CMAKE_BIN       = $(shell which cmake)
endif

include config/configure.prefix.flag.config  

CMAKE_CMD	=    ${CMAKE_BIN} -G "Ninja" 				\
			-DCMAKE_INSTALL_PREFIX:STRING=${NLYTIQ_INST_PATH} 	\
			-DLLVM_PARALLEL_COMPILE_JOBS:STRING=${NCPU}  		\
			-DLLVM_PARALLEL_LINK_JOBS:STRING=${NCPU}		\
			-DCMAKE_BUILD_TYPE=Release				\
			-DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lldb;compiler-rt;polly;openmp;libcxx;libcxxabi;libunwind;flang;libclc;libcxxabi;lld" 

#                        -DLLVM_ENABLE_CXX1Y:BOOL=On -DLLVM_ENABLE_LTO:BOOL=Off \
#                        -DLLVM_PARALLEL_COMPILE_JOBS:STRING=${NCPU}  \
#                        -DLLVM_PARALLEL_LINK_JOBS:STRING=${NCPU} \
#			-DLLVM_BUILD_LLVM_DYLIB:BOOL=ON \
#			-DLLVM_TARGETS_TO_BUILD:STRING="host" \
#			-DLLVM_LINK_LLVM_DYLIB:BOOL=ON 	\
#			-DLLVM_ENABLE_PROJECTS='clang,clang-tools-extra,lldb,compiler-rt,polly'

BUILDDIR	= ${LLVMDIR}/build

#--------------------------------------------------------------------------#

all:    	install-llvm 

clean:		clean-llvm


configure-llvm: 
	tar -Jxf sources/${LLVMTAR}
	mkdir -p ${BUILDDIR}
	touch configure-llvm

make-llvm: configure-llvm
	cd ${BUILDDIR} ; CFLAGS="${CFLAGS}" CXXFLAGS="${CXXFLAGS}" ${CMAKE_CMD} -D CMAKE_C_COMPILER=${CC} -D CMAKE_CXX_COMPILER=${CXX}  ../llvm
	cd ${BUILDDIR}  ; ninja -j${NCPU}
	touch make-llvm

install-llvm: make-llvm
	cd ${BUILDDIR}  ; make -j${NCPU} install
ifeq ($(OS),Linux)
	#echo "${NLYTIQ_INST_PATH}/lib" > /etc/ld.so.conf.d/nlytiq.conf
	#ldconfig
endif
	touch install-llvm

clean-llvm:
	rm -rf ${LLVMDIR} make-llvm  install-llvm configure-llvm ${BUILDDIR} 
