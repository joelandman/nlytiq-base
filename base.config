### nlytiq build config

### build version
NLYTIQ_VERSION		= 0
NLYTIQ_SUB_VERSION	= 1
NLYTIQ_BUILD		= $(shell pwd)

###   Everything will be installed under
NLYTIQ_TOP              = /opt/nlytiq
NLYTIQ_INST_PATH	= ${NLYTIQ_TOP}
NLYTIQ_ETC_PATH		= ${NLYTIQ_INST_PATH}/etc
NLYTIQ_SBIN_PATH	= ${NLYTIQ_INST_PATH}/sbin
NLYTIQ_BIN_PATH		= ${NLYTIQ_INST_PATH}/bin
NLYTIQ_MAN_PATH		= ${NLYTIQ_INST_PATH}/man/man8

### for parallel builds
# note: need to use uname -s to distinguish between Linux and OSX
OS		:= $(shell uname -s)

# linux
ifeq ($(OS), Linux)
NCPU		:= $(shell lscpu -p | wc -l)
endif

# OSX
ifeq ($(OS), Darwin)
NCPU            := $(shell sysctl -n hw.ncpu)
endif

### assume bash
SHELL		= /bin/bash
### OS data
OSREV           = $(shell uname -r)

### compilers
# set variable to 1 to use.  Only one can be used at a time
GCC	= 1
CLANG	= 0

# sanity check
ifeq ($(GCC),1)
ifeq ($(CLANG),1)
$(error You have both GCC=1 and CLANG=1 in base.config.  Only one or the other can be 1.)
endif
endif

ifeq ($(GCC),0)
ifeq ($(CLANG),0)
$(error You have both GCC=0 and CLANG=0 in base.config.  Only one or the other can be 0.)
endif
endif

# specific compiler config

ifeq ($(GCC),1)
CC             = gcc
CXX            = g++
CFLAGS          = "-fPIC -O3 -malign-double -g"
endif

ifeq ($(CLANG),1)
CC              = ${NLYTIQ_INST_PATH}/bin/clang
CXX             = ${NLYTIQ_INST_PATH}/bin/clang++
CFLAGS          = "-O2"  
endif

### use locally compiled atlas or not
BUILDATLAS	= 0
